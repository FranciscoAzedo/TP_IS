[2019-12-09 13:00:47,493] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-09 13:00:47,493] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-09 13:00:47,493] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), salesTopic-0 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), DBInfoTopic-0 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), teste-0 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), merda-0 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), purchasesTopic-0 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-12-09 13:00:47,493] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-12-09 13:00:47,493] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-12-09 13:05:47,494] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-09 13:05:47,494] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-09 13:05:47,495] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), salesTopic-0 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), DBInfoTopic-0 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), teste-0 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), merda-0 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), purchasesTopic-0 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-12-09 13:05:47,495] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-12-09 13:05:47,495] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-12-09 13:10:47,495] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-09 13:10:47,495] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-09 13:10:47,496] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), salesTopic-0 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), DBInfoTopic-0 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), teste-0 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), merda-0 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), purchasesTopic-0 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-12-09 13:10:47,496] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-12-09 13:10:47,496] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-12-09 13:15:47,496] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-09 13:15:47,496] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-09 13:15:47,497] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), salesTopic-0 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), DBInfoTopic-0 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), teste-0 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), merda-0 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), purchasesTopic-0 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-12-09 13:15:47,497] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-12-09 13:15:47,497] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-12-09 13:20:47,498] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-09 13:20:47,498] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-09 13:20:47,499] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), salesTopic-0 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), DBInfoTopic-0 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), teste-0 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), merda-0 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), purchasesTopic-0 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-12-09 13:20:47,500] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-12-09 13:20:47,500] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-12-09 13:25:47,501] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-09 13:25:47,501] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-09 13:25:47,502] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), salesTopic-0 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), DBInfoTopic-0 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), teste-0 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), merda-0 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), purchasesTopic-0 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-12-09 13:25:47,502] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-12-09 13:25:47,502] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-12-09 13:30:47,508] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-09 13:30:47,508] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-09 13:30:47,510] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), salesTopic-0 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), DBInfoTopic-0 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), teste-0 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), merda-0 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), purchasesTopic-0 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-12-09 13:30:47,511] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-12-09 13:30:47,511] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-12-09 13:35:47,518] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-09 13:35:47,519] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-09 13:35:47,520] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), salesTopic-0 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), DBInfoTopic-0 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), teste-0 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), merda-0 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), purchasesTopic-0 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-12-09 13:35:47,520] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-12-09 13:35:47,520] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-12-09 13:40:47,521] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-12-09 13:40:47,522] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-12-09 13:40:47,522] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), salesTopic-0 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), DBInfoTopic-0 -> Vector(0), streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), teste-0 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), merda-0 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), purchasesTopic-0 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2019-12-09 13:40:47,523] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-12-09 13:40:47,523] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-12-09 13:41:12,394] DEBUG [Controller id=0] Delete topics listener fired for topics merda to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:12,396] INFO [Controller id=0] Starting topic deletion for topics merda (kafka.controller.KafkaController)
[2019-12-09 13:41:12,401] INFO [Topic Deletion Manager 0] Handling deletion for topics merda (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:12,407] INFO [Topic Deletion Manager 0] Deletion of topic merda (re)started (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:12,408] INFO [Topic Deletion Manager 0] Topic deletion callback for merda (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:12,449] INFO [RequestSendThread controllerId=0] Controller 0 connected to francisco-VirtualBox:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-12-09 13:41:12,459] INFO [Topic Deletion Manager 0] Partition deletion callback for merda-0 (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:12,577] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=merda,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:12,579] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=merda,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:12,581] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=merda,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:12,660] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(merda-0 -> NONE) (kafka.controller.KafkaController)
[2019-12-09 13:41:12,663] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=merda,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:12,664] INFO [Topic Deletion Manager 0] Handling deletion for topics merda (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:12,736] INFO [Topic Deletion Manager 0] Deletion of topic merda successfully completed (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:12,738] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-12-09 13:41:12,739] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:20,253] DEBUG [Controller id=0] Delete topics listener fired for topics streams-plaintext-input to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:20,253] INFO [Controller id=0] Starting topic deletion for topics streams-plaintext-input (kafka.controller.KafkaController)
[2019-12-09 13:41:20,253] INFO [Topic Deletion Manager 0] Handling deletion for topics streams-plaintext-input (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:20,254] INFO [Topic Deletion Manager 0] Deletion of topic streams-plaintext-input (re)started (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:20,254] INFO [Topic Deletion Manager 0] Topic deletion callback for streams-plaintext-input (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:20,257] INFO [Topic Deletion Manager 0] Partition deletion callback for streams-plaintext-input-0 (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:20,282] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=streams-plaintext-input,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:20,283] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=streams-plaintext-input,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:20,284] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=streams-plaintext-input,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:20,343] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(streams-plaintext-input-0 -> NONE) (kafka.controller.KafkaController)
[2019-12-09 13:41:20,343] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=streams-plaintext-input,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:20,344] INFO [Topic Deletion Manager 0] Handling deletion for topics streams-plaintext-input (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:20,388] INFO [Topic Deletion Manager 0] Deletion of topic streams-plaintext-input successfully completed (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:20,392] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-12-09 13:41:20,397] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:27,139] DEBUG [Controller id=0] Delete topics listener fired for topics streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:27,139] INFO [Controller id=0] Starting topic deletion for topics streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog (kafka.controller.KafkaController)
[2019-12-09 13:41:27,140] INFO [Topic Deletion Manager 0] Handling deletion for topics streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:27,140] INFO [Topic Deletion Manager 0] Deletion of topic streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog (re)started (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:27,140] INFO [Topic Deletion Manager 0] Topic deletion callback for streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:27,143] INFO [Topic Deletion Manager 0] Partition deletion callback for streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:27,167] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:27,167] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:27,168] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:27,202] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> NONE) (kafka.controller.KafkaController)
[2019-12-09 13:41:27,202] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:27,204] INFO [Topic Deletion Manager 0] Handling deletion for topics streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:27,256] INFO [Topic Deletion Manager 0] Deletion of topic streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog successfully completed (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:27,260] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-12-09 13:41:27,265] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:33,347] DEBUG [Controller id=0] Delete topics listener fired for topics streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:33,347] INFO [Controller id=0] Starting topic deletion for topics streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition (kafka.controller.KafkaController)
[2019-12-09 13:41:33,348] INFO [Topic Deletion Manager 0] Handling deletion for topics streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:33,348] INFO [Topic Deletion Manager 0] Deletion of topic streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition (re)started (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:33,348] INFO [Topic Deletion Manager 0] Topic deletion callback for streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:33,351] INFO [Topic Deletion Manager 0] Partition deletion callback for streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:33,380] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:33,380] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:33,383] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:33,417] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> NONE) (kafka.controller.KafkaController)
[2019-12-09 13:41:33,418] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:33,419] INFO [Topic Deletion Manager 0] Handling deletion for topics streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:33,457] INFO [Topic Deletion Manager 0] Deletion of topic streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition successfully completed (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:33,460] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-12-09 13:41:33,464] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:39,677] DEBUG [Controller id=0] Delete topics listener fired for topics streams-wordcount-output to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:39,677] INFO [Controller id=0] Starting topic deletion for topics streams-wordcount-output (kafka.controller.KafkaController)
[2019-12-09 13:41:39,677] INFO [Topic Deletion Manager 0] Handling deletion for topics streams-wordcount-output (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:39,678] INFO [Topic Deletion Manager 0] Deletion of topic streams-wordcount-output (re)started (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:39,678] INFO [Topic Deletion Manager 0] Topic deletion callback for streams-wordcount-output (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:39,681] INFO [Topic Deletion Manager 0] Partition deletion callback for streams-wordcount-output-0 (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:39,696] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=streams-wordcount-output,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:39,697] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=streams-wordcount-output,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:39,698] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=streams-wordcount-output,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:39,742] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(streams-wordcount-output-0 -> NONE) (kafka.controller.KafkaController)
[2019-12-09 13:41:39,743] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=streams-wordcount-output,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:39,744] INFO [Topic Deletion Manager 0] Handling deletion for topics streams-wordcount-output (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:39,788] INFO [Topic Deletion Manager 0] Deletion of topic streams-wordcount-output successfully completed (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:39,793] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-12-09 13:41:39,797] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:45,760] DEBUG [Controller id=0] Delete topics listener fired for topics test to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:45,760] INFO [Controller id=0] Starting topic deletion for topics test (kafka.controller.KafkaController)
[2019-12-09 13:41:45,760] INFO [Topic Deletion Manager 0] Handling deletion for topics test (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:45,761] INFO [Topic Deletion Manager 0] Deletion of topic test (re)started (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:45,761] INFO [Topic Deletion Manager 0] Topic deletion callback for test (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:45,763] INFO [Topic Deletion Manager 0] Partition deletion callback for test-0 (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:45,784] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=test,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:45,784] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=test,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:45,786] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=test,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:45,829] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(test-0 -> NONE) (kafka.controller.KafkaController)
[2019-12-09 13:41:45,830] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:45,831] INFO [Topic Deletion Manager 0] Handling deletion for topics test (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:45,877] INFO [Topic Deletion Manager 0] Deletion of topic test successfully completed (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:45,885] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-12-09 13:41:45,888] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:51,378] DEBUG [Controller id=0] Delete topics listener fired for topics teste to be deleted (kafka.controller.KafkaController)
[2019-12-09 13:41:51,378] INFO [Controller id=0] Starting topic deletion for topics teste (kafka.controller.KafkaController)
[2019-12-09 13:41:51,379] INFO [Topic Deletion Manager 0] Handling deletion for topics teste (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:51,379] INFO [Topic Deletion Manager 0] Deletion of topic teste (re)started (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:51,379] INFO [Topic Deletion Manager 0] Topic deletion callback for teste (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:51,381] INFO [Topic Deletion Manager 0] Partition deletion callback for teste-0 (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:51,399] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=teste,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:51,399] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=teste,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:51,400] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=teste,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2019-12-09 13:41:51,437] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(teste-0 -> NONE) (kafka.controller.KafkaController)
[2019-12-09 13:41:51,437] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=teste,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:51,438] INFO [Topic Deletion Manager 0] Handling deletion for topics teste (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:51,487] INFO [Topic Deletion Manager 0] Deletion of topic teste successfully completed (kafka.controller.TopicDeletionManager)
[2019-12-09 13:41:51,489] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-12-09 13:41:51,492] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
